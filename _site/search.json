[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "My Lab Journal",
    "section": "",
    "text": "This is a template example for lab journaling. Students in the data science courses at the Institute of Entrepreneurship will use this template to learn R for business analytics. Students can replace this text as they wish."
  },
  {
    "objectID": "index.html#how-to-use",
    "href": "index.html#how-to-use",
    "title": "My Lab Journal",
    "section": "How to use",
    "text": "How to use\n\nAccept the assignment and get your own github repo.\nBlog/journal what you are doing in R, by editing the .qmd files.\nSee the links page for lots of helpful links on learning R.\nChange everything to make it your own.\nMake sure to render you website every time before you want to upload changes."
  },
  {
    "objectID": "content/01_journal/02_statistics.html",
    "href": "content/01_journal/02_statistics.html",
    "title": "Statistical Concepts",
    "section": "",
    "text": "Assignment\n\nLoading and Overview of the Table:\n\n# Loading file random_vars:\nrandom_vars &lt;- readRDS(\"../../Causal_Data_Science_Data/random_vars.rds\")\nrandom_vars\n\n\n\n  \n\n\n\n\nTask 1:\nFor each variable: age and income, computing the following values:\n\nExpected Value\n\n\n# Expected Values:\nexpected_value &lt;- sapply(random_vars, mean)\n# Displaying the Expected Values\nexpected_values_df &lt;- data.frame(\"Expected Value of Age\" = expected_value[\"age\"], \"Expected value of Income\" = expected_value[\"income\"], row.names = '')\ncolnames(expected_values_df) &lt;- gsub(\"\\\\.\", \" \", colnames(expected_values_df))\nexpected_values_df\n\n\n\n  \n\n\n\n\nVariance\n\n\n# Variance\nvariance &lt;- sapply(random_vars, var)\n# Displaying the Variances\nvariances_df &lt;- data.frame(\"Variance of Age\" = variance[\"age\"], \"Variance of Income\" = variance[\"income\"], row.names = '')\ncolnames(variances_df) &lt;- gsub(\"\\\\.\", \" \", colnames(variances_df))\nvariances_df\n\n\n\n  \n\n\n\n\nStandard Deviation\n\n\n# Standard Deviation\nstd &lt;- sapply(random_vars, sd)\nstd_df &lt;- data.frame(\"Standard Deviation of Age\" = std[\"age\"], \"Standard Deviation of Income\" = std[\"income\"], row.names = '')\ncolnames(std_df) &lt;- gsub(\"\\\\.\", \" \", colnames(std_df))\nstd_df\n\n\n\n  \n\n\n\n\n\nTask 2:\nNo, it doesn’t makes sense to compare the standard deviations as comparing the standard deviations of age and income directly may not provide meaningful insights, as they are measured in different units.These two measures reflect the variability within each respective variable, but they do not offer a direct comparison between the two variables.\n\n\nTask 3:\nThe relationship between both variables with covariance and correlation:\n\nCovariance\n\n\ncovariance &lt;- cov(random_vars$income, random_vars$age)\npaste(\"Covariance is\",covariance)\n\n#&gt; [1] \"Covariance is 29700.1468458458\"\n\n\nThe covariance of 29700.15 between income and age suggests a positive relationship, indicating that as age increases, there tends to be an increase in income, and vice versa.\n\nCorrelation\n\n\ncorrelation &lt;- cor(random_vars$income, random_vars$age)\npaste(\"Correlation is\", correlation)\n\n#&gt; [1] \"Correlation is 0.547943162326476\"\n\n\nThe correlation coefficient of 0.55 between income and age suggests a moderate positive linear relationship, indicating that, on average, as age increases, there is a tendency for income to also increase.\n\n\nTask 4:\nBoth correlation and covariance are measures of the relationship between two variables, but they differ in scale and interpretability.\n\nCovariance:\n\nInterpretation: Covariance measures the extent to which two variables change together. It can be positive, negative, or zero.\nScale: The scale of covariance is in the units of the product of the units of the two variables.\nInterpretation Challenge: The challenge with interpreting covariance lies in its scale. The magnitude of the covariance is not standardized, making it difficult to compare the strength of relationships between different pairs of variables.\n\nCorrelation:\n\nInterpretation: Correlation, on the other hand, standardizes the measure of association, providing a unit less value between -1 and 1. A correlation of 1 indicates a perfect positive linear relationship, -1 indicates a perfect negative linear relationship, and 0 indicates no linear relationship.\nScale: The scale of correlation is standardized, making it easier to compare and interpret across different variable pairs.\nInterpretation Advantage: Correlation is more interpretable than covariance due to its standardized scale. You can readily compare the strength and direction of relationships between different pairs of variables.\n\n\n\n\n\n\n\n\nConclusion\n\n\n\nIn most cases, correlation is easier to interpret and compare than covariance because it provides a standardized measure that ranges from -1 to 1. This allows for a more straightforward understanding of the strength and direction of the relationship between two variables. If the goal is to assess the degree and direction of association while avoiding scale-related challenges, correlation is generally preferred over covariance.\n\n\n\nThe conditional expected values:\n\n\n\\(E[income|age&lt;=18]\\):\n\n\n#The expected value of the income when age&lt;=18:\ncev_income_age_leq_18&lt;- mean(subset(random_vars, age &lt;= 18)$income)\npaste(\"Conditional expected value of income for age &lt;= 18:\", cev_income_age_leq_18)\n\n#&gt; [1] \"Conditional expected value of income for age &lt;= 18: 389.607438016529\"\n\n\n\n\\(E[income|age\\in[18,65)]\\)\n\n\n#The expected value of the income when 18&lt;=age&lt;65:\ncev_income_age_bw_18_65&lt;- mean(subset(random_vars, age %in% 18:64)$income)\npaste(\"Conditional expected value of income for age between 18 to 64:\", cev_income_age_bw_18_65)\n\n#&gt; [1] \"Conditional expected value of income for age between 18 to 64: 4685.73426573427\"\n\n\n\n\\(E[income|age&gt;=65]\\)\n\n\n#The expected value of the income when age&gt;=65:\ncev_income_age_geq_65&lt;- mean(subset(random_vars, age &gt;= 65)$income) \npaste(\"Conditional expected value of income for age &gt;= 65:\", cev_income_age_geq_65)\n\n#&gt; [1] \"Conditional expected value of income for age &gt;= 65: 1777.23728813559\""
  },
  {
    "objectID": "content/01_journal/04_causality.html",
    "href": "content/01_journal/04_causality.html",
    "title": "Causality",
    "section": "",
    "text": "Assignment\n\n\nExample of number of facebook friends with average grade in university course\n\nGenerating data\n\n\n# Generating few data points\nstudents &lt;- seq(1, 100, by = 1)\n\nfacebook_friends &lt;- rnorm(length(students), mean = 300, sd = 100) + \n  rnorm(length(students), mean = 0, sd = 30)  # noise\n\naverage_grade &lt;- rnorm(length(students), mean = 70, sd = 10) + \n  0.5 * facebook_friends + \n  rnorm(length(students), mean = 0, sd = 10)  # noise\n\n# Creating a data frame\ndata &lt;- data.frame(Student_ID = students, \n                   Facebook_Friends = facebook_friends,\n                   Average_Grade = average_grade)\ndata\n\n\n\n  \n\n\n\n\nggplot()\n\n\n# Scatter Plot\nggplot(data, aes(x = Facebook_Friends, y = Average_Grade)) +\n  geom_point() +\n  labs(title = \"Spurious Correlation: Facebook Friends vs. Average Grade\",\n       x = \"Number of Facebook Friends\",\n       y = \"Average Grade in University Courses\")\n\n\n\n\n\n\n\n\n\nCorrelation\n\n\n# Calculate the correlation coefficient\ncorrelation_coefficient &lt;- cor(data$Facebook_Friends, data$Average_Grade)\npaste(\"Correlation coefficient: \", correlation_coefficient)\n\n#&gt; [1] \"Correlation coefficient:  0.971816354322658\"\n\n\n\n\n\n\n\n\nNote\n\n\n\nLine Chart that shows a positive correlation between Facebook Friends and Average Grade. The correlation coefficient is &gt;0.9, which indicates a strong positive correlation.\n\n\nCorrelation doesn’t imply causation. In my generated example, I deliberately created a scenario to illustrate the concept of spurious correlation without asserting any causal link between the number of Facebook friends and academic performance.\nIn reality, there could be numerous factors influencing academic performance, and the number of Facebook friends is unlikely to be a direct cause. Some real-world factors that may contribute to good grades include:\n\nStudy Habits: Students who develop effective study habits are likely to perform better academically.\nAttendance: Regular attendance in classes and engagement with course materials can positively impact grades.\nInterest in the Subject: Genuine interest in the subject matter often leads to better understanding and performance.\nTime Management: Efficient time management is crucial for balancing academic and extracurricular activities."
  },
  {
    "objectID": "content/01_journal/09_iv.html",
    "href": "content/01_journal/09_iv.html",
    "title": "Instrumental Variables",
    "section": "",
    "text": "Note\n\n\n\nYou can delete everything in here and start fresh."
  },
  {
    "objectID": "content/01_journal/07_matching.html",
    "href": "content/01_journal/07_matching.html",
    "title": "Matching and Subclassification",
    "section": "",
    "text": "Note\n\n\n\nYou can delete everything in here and start fresh."
  },
  {
    "objectID": "content/01_journal/05_dag.html",
    "href": "content/01_journal/05_dag.html",
    "title": "Directed Acyclic Graphs",
    "section": "",
    "text": "Note\n\n\n\nYou can delete everything in here and start fresh."
  },
  {
    "objectID": "content/01_journal/06_rct.html",
    "href": "content/01_journal/06_rct.html",
    "title": "Randomized Controlled Trials",
    "section": "",
    "text": "Note\n\n\n\nYou can delete everything in here and start fresh."
  },
  {
    "objectID": "content/01_journal/08_did.html",
    "href": "content/01_journal/08_did.html",
    "title": "Difference-in-Differences",
    "section": "",
    "text": "Note\n\n\n\nYou can delete everything in here and start fresh."
  },
  {
    "objectID": "content/01_journal/01_probability.html",
    "href": "content/01_journal/01_probability.html",
    "title": "Probability Theory",
    "section": "",
    "text": "Assignment 1:\n\n\nGiven that,\n\\(P(S) = 0.3\\) and \\(P(\\overline{S}) = 0.7\\)\n\\(P(T/S) = 0.2\\) and \\(P(\\overline{T}/S) = 0.8\\)\n\\(P(T/\\overline{S}) = 0.6\\) and \\(P(\\overline{T}/\\overline{S}) = 0.4\\)\n\n\nSolution\n\n\\(P(T\\cap S) = P(S) * P(T/S) = 0.3 * 0.2 = 0.06\\)\n\\(P(T\\cap \\overline{S}) = P(\\overline{S}) * P(T/\\overline{S}) = 0.7 * 0.6 = 0.42\\)\n\\(P(\\overline{T}\\cap S) = P(S) * P(\\overline{T}/S) = 0.3 * 0.8 = 0.24\\)\n\\(P(\\overline{T}\\cap \\overline{S}) = P(\\overline{S}) * P(\\overline{T}/\\overline{S}) = 0.7 * 0.4 = 0.28\\)\n\nSum of all four probabilities = 0.06 + 0.42 + 0.24 + 0.28 = 1\n\n\n\nAssignment 2:\n\n\nLet S = Smartphone, T = Tablet and C = Computer\n\n\nSolution\n\nThe percentage of customers using all three devices: \\(= P(S\\cap T\\cap C) = 0.5\\%\\)\nThe percentage of customers using at least two devices: \\(= 7.3 + 3.3 + 8.8 + 0.5 = 19.9\\%\\)\nThe percentage of customers using only one device: \\(= 42.3 + 27.8 + 10 = 80.1\\%\\)\n\n\n\n\nAssignment 3:\n\n\nGiven that,\n\\(A\\) = product is faulty vs. \\(\\overline{A}\\) = product is flawless\n\\(B\\) = alarm is triggered vs. \\(\\overline{B}\\) = no alarm\n\\(P(B|A)=0.97\\)\n\\(P(B|\\overline{A})=0.01\\)\n\\(P(A)=0.04\\)\n\n\nSolution\nBy Bayesian Theorem, \\(P(A|B) = \\frac{P(A|B)*P(A)}{P(B)} = \\frac{P(A|B)*P(A)}{P(B|A)*P(A)+P(B|\\overline{A})*P(\\overline{A})}\\)\n\n\\(P(\\overline{A}|B)=\\frac{0.01*0.96}{(0.01*0.96)+(0.97*0.04)}= 0.1983471074 =19.83\\%\\)\n\\(P(A|B)=\\frac{0.97*0.04}{(0.01*0.96)+(0.97*0.04)}= 0.8016528926 =80.17\\%\\)\n\nThese results show that in case the alarm is triggered, there is a possibility of about 19.83% that the product is flawless and a probability of 80.17% that the product is faulty."
  },
  {
    "objectID": "content/01_journal/01_probability.html#header-2",
    "href": "content/01_journal/01_probability.html#header-2",
    "title": "Probability Theory",
    "section": "2.1 Header 2",
    "text": "2.1 Header 2\n\nHeader 3\n\nHeader 4\n\nHeader 5\n\nHeader 6"
  },
  {
    "objectID": "content/01_journal/03_regression.html",
    "href": "content/01_journal/03_regression.html",
    "title": "Regression and Statistical Inference",
    "section": "",
    "text": "Assignment\n\n\nTask 1:\nReading the data for its dimensions,\n\n# Loading the file car_prices\ndf_car_prices &lt;- readRDS(\"../../Causal_Data_Science_Data/car_prices.rds\")\n# Dimensions of the data\ndim(df_car_prices)\n\n#&gt; [1] 181  22\n\n\nThe data has 181 rows and 22 columns.\n\n\nTask 2:\n\nDetailed look of the data\n\n\nt(summary(df_car_prices))\n\n#&gt;                                                                          \n#&gt;  aspiration      Length:181         Class :character   Mode  :character  \n#&gt;  doornumber      Length:181         Class :character   Mode  :character  \n#&gt;   carbody        Length:181         Class :character   Mode  :character  \n#&gt;  drivewheel      Length:181         Class :character   Mode  :character  \n#&gt; enginelocation   Length:181         Class :character   Mode  :character  \n#&gt;   wheelbase      Min.   : 86.60     1st Qu.: 94.50     Median : 96.50    \n#&gt;   carlength      Min.   :141.1      1st Qu.:166.3      Median :173.0     \n#&gt;    carwidth      Min.   :60.30      1st Qu.:64.00      Median :65.40     \n#&gt;   carheight      Min.   :47.80      1st Qu.:52.00      Median :53.70     \n#&gt;   curbweight     Min.   :1488       1st Qu.:2122       Median :2410      \n#&gt;  enginetype      Length:181         Class :character   Mode  :character  \n#&gt; cylindernumber   Length:181         Class :character   Mode  :character  \n#&gt;   enginesize     Min.   : 61.0      1st Qu.: 98.0      Median :120.0     \n#&gt;  fuelsystem      Length:181         Class :character   Mode  :character  \n#&gt;   boreratio      Min.   :2.540      1st Qu.:3.150      Median :3.310     \n#&gt;     stroke       Min.   :2.07       1st Qu.:3.08       Median :3.23      \n#&gt; compressionratio Min.   : 7.000     1st Qu.: 8.500     Median : 9.000    \n#&gt;   horsepower     Min.   : 48.0      1st Qu.: 70.0      Median : 95.0     \n#&gt;    peakrpm       Min.   :4200       1st Qu.:4800       Median :5200      \n#&gt;    citympg       Min.   :13.00      1st Qu.:19.00      Median :24.00     \n#&gt;   highwaympg     Min.   :16.00      1st Qu.:25.00      Median :30.00     \n#&gt;     price        Min.   : 5118      1st Qu.: 7609      Median : 9980     \n#&gt;                                                                    \n#&gt;  aspiration                                                        \n#&gt;  doornumber                                                        \n#&gt;   carbody                                                          \n#&gt;  drivewheel                                                        \n#&gt; enginelocation                                                     \n#&gt;   wheelbase      Mean   : 98.21   3rd Qu.:100.40   Max.   :120.90  \n#&gt;   carlength      Mean   :173.3    3rd Qu.:180.2    Max.   :208.1   \n#&gt;    carwidth      Mean   :65.74    3rd Qu.:66.50    Max.   :72.30   \n#&gt;   carheight      Mean   :53.58    3rd Qu.:55.50    Max.   :59.80   \n#&gt;   curbweight     Mean   :2521     3rd Qu.:2910     Max.   :4066    \n#&gt;  enginetype                                                        \n#&gt; cylindernumber                                                     \n#&gt;   enginesize     Mean   :127.1    3rd Qu.:141.0    Max.   :326.0   \n#&gt;  fuelsystem                                                        \n#&gt;   boreratio      Mean   :3.325    3rd Qu.:3.590    Max.   :3.940   \n#&gt;     stroke       Mean   :3.23     3rd Qu.:3.40     Max.   :4.17    \n#&gt; compressionratio Mean   : 8.848   3rd Qu.: 9.400   Max.   :11.500  \n#&gt;   horsepower     Mean   :106.2    3rd Qu.:116.0    Max.   :288.0   \n#&gt;    peakrpm       Mean   :5182     3rd Qu.:5500     Max.   :6600    \n#&gt;    citympg       Mean   :24.85    3rd Qu.:30.00    Max.   :49.00   \n#&gt;   highwaympg     Mean   :30.48    3rd Qu.:34.00    Max.   :54.00   \n#&gt;     price        Mean   :12999    3rd Qu.:16430    Max.   :45400\n\n\n\nCorrelation of numerical columns\n\n\n# Selecting only numeric columns\nnumeric_cols &lt;- df_car_prices[sapply(df_car_prices, is.numeric)]\n\n# Calculating correlation matrix\ncor(numeric_cols)\n\n#&gt;                    wheelbase   carlength   carwidth   carheight curbweight\n#&gt; wheelbase         1.00000000  0.86117385  0.7697984  0.54019069  0.7367123\n#&gt; carlength         0.86117385  1.00000000  0.8264703  0.44081316  0.8660053\n#&gt; carwidth          0.76979836  0.82647026  1.0000000  0.20488138  0.8480000\n#&gt; carheight         0.54019069  0.44081316  0.2048814  1.00000000  0.2141918\n#&gt; curbweight        0.73671231  0.86600528  0.8480000  0.21419176  1.0000000\n#&gt; enginesize        0.55411851  0.68017071  0.7431094 -0.02315796  0.8664640\n#&gt; boreratio         0.46436865  0.60094354  0.5515756  0.13853090  0.6382900\n#&gt; stroke            0.07182428  0.06571525  0.1143203 -0.15074728  0.1003967\n#&gt; compressionratio -0.25528942 -0.25098987 -0.2497246 -0.04784995 -0.3108351\n#&gt; horsepower        0.40436893  0.59890956  0.6971702 -0.09471443  0.8176250\n#&gt; peakrpm          -0.21992786 -0.19115857 -0.1086424 -0.15338356 -0.1596062\n#&gt; citympg          -0.58337119 -0.78122590 -0.7392601 -0.15044099 -0.8727123\n#&gt; highwaympg       -0.62686055 -0.78886402 -0.7501573 -0.18342575 -0.8873144\n#&gt; price             0.55547499  0.67307358  0.7430132  0.07452058  0.8340814\n#&gt;                   enginesize  boreratio      stroke compressionratio\n#&gt; wheelbase         0.55411851  0.4643687  0.07182428      -0.25528942\n#&gt; carlength         0.68017071  0.6009435  0.06571525      -0.25098987\n#&gt; carwidth          0.74310940  0.5515756  0.11432033      -0.24972464\n#&gt; carheight        -0.02315796  0.1385309 -0.15074728      -0.04784995\n#&gt; curbweight        0.86646404  0.6382900  0.10039673      -0.31083510\n#&gt; enginesize        1.00000000  0.5779073  0.18198111      -0.16132409\n#&gt; boreratio         0.57790729  1.0000000 -0.10077211      -0.19600019\n#&gt; stroke            0.18198111 -0.1007721  1.00000000      -0.30056815\n#&gt; compressionratio -0.16132409 -0.1960002 -0.30056815       1.00000000\n#&gt; horsepower        0.84661455  0.5917398  0.11169001      -0.22352509\n#&gt; peakrpm          -0.18477648 -0.2363817  0.06779511       0.15590249\n#&gt; citympg          -0.74373969 -0.6185363 -0.09158746       0.43789655\n#&gt; highwaympg       -0.75541425 -0.6086412 -0.07422008       0.44866322\n#&gt; price             0.88970342  0.5540692  0.03082326      -0.17646152\n#&gt;                   horsepower     peakrpm     citympg  highwaympg       price\n#&gt; wheelbase         0.40436893 -0.21992786 -0.58337119 -0.62686055  0.55547499\n#&gt; carlength         0.59890956 -0.19115857 -0.78122590 -0.78886402  0.67307358\n#&gt; carwidth          0.69717017 -0.10864244 -0.73926008 -0.75015733  0.74301316\n#&gt; carheight        -0.09471443 -0.15338356 -0.15044099 -0.18342575  0.07452058\n#&gt; curbweight        0.81762499 -0.15960618 -0.87271235 -0.88731441  0.83408139\n#&gt; enginesize        0.84661455 -0.18477648 -0.74373969 -0.75541425  0.88970342\n#&gt; boreratio         0.59173978 -0.23638175 -0.61853627 -0.60864116  0.55406923\n#&gt; stroke            0.11169001  0.06779511 -0.09158746 -0.07422008  0.03082326\n#&gt; compressionratio -0.22352509  0.15590249  0.43789655  0.44866322 -0.17646152\n#&gt; horsepower        1.00000000  0.08277528 -0.80612428 -0.77717065  0.84009827\n#&gt; peakrpm           0.08277528  1.00000000  0.02610522  0.05111792 -0.02085359\n#&gt; citympg          -0.80612428  0.02610522  1.00000000  0.97537685 -0.74198802\n#&gt; highwaympg       -0.77717065  0.05111792  0.97537685  1.00000000 -0.74079733\n#&gt; price             0.84009827 -0.02085359 -0.74198802 -0.74079733  1.00000000\n\n\n\nData types of each column and the samples\n\n\n# Data Types\nstr(df_car_prices)\n\n#&gt; tibble [181 × 22] (S3: tbl_df/tbl/data.frame)\n#&gt;  $ aspiration      : chr [1:181] \"std\" \"std\" \"std\" \"std\" ...\n#&gt;  $ doornumber      : chr [1:181] \"two\" \"two\" \"two\" \"four\" ...\n#&gt;  $ carbody         : chr [1:181] \"convertible\" \"convertible\" \"hatchback\" \"sedan\" ...\n#&gt;  $ drivewheel      : chr [1:181] \"rwd\" \"rwd\" \"rwd\" \"fwd\" ...\n#&gt;  $ enginelocation  : chr [1:181] \"front\" \"front\" \"front\" \"front\" ...\n#&gt;  $ wheelbase       : num [1:181] 88.6 88.6 94.5 99.8 99.4 ...\n#&gt;  $ carlength       : num [1:181] 169 169 171 177 177 ...\n#&gt;  $ carwidth        : num [1:181] 64.1 64.1 65.5 66.2 66.4 66.3 71.4 71.4 71.4 67.9 ...\n#&gt;  $ carheight       : num [1:181] 48.8 48.8 52.4 54.3 54.3 53.1 55.7 55.7 55.9 52 ...\n#&gt;  $ curbweight      : num [1:181] 2548 2548 2823 2337 2824 ...\n#&gt;  $ enginetype      : chr [1:181] \"dohc\" \"dohc\" \"ohcv\" \"ohc\" ...\n#&gt;  $ cylindernumber  : chr [1:181] \"four\" \"four\" \"six\" \"four\" ...\n#&gt;  $ enginesize      : num [1:181] 130 130 152 109 136 136 136 136 131 131 ...\n#&gt;  $ fuelsystem      : chr [1:181] \"mpfi\" \"mpfi\" \"mpfi\" \"mpfi\" ...\n#&gt;  $ boreratio       : num [1:181] 3.47 3.47 2.68 3.19 3.19 3.19 3.19 3.19 3.13 3.13 ...\n#&gt;  $ stroke          : num [1:181] 2.68 2.68 3.47 3.4 3.4 3.4 3.4 3.4 3.4 3.4 ...\n#&gt;  $ compressionratio: num [1:181] 9 9 9 10 8 8.5 8.5 8.5 8.3 7 ...\n#&gt;  $ horsepower      : num [1:181] 111 111 154 102 115 110 110 110 140 160 ...\n#&gt;  $ peakrpm         : num [1:181] 5000 5000 5000 5500 5500 5500 5500 5500 5500 5500 ...\n#&gt;  $ citympg         : num [1:181] 21 21 19 24 18 19 19 19 17 16 ...\n#&gt;  $ highwaympg      : num [1:181] 27 27 26 30 22 25 25 25 20 22 ...\n#&gt;  $ price           : num [1:181] 13495 16500 16500 13950 17450 ...\n\n\nTotal unique data types in the car_price data set\n\n# Seeing the datatypes in the data\ncolumn_types &lt;- sapply(df_car_prices, class)\n# Get unique data types\nunique_types &lt;- unique(column_types)\n# Print the unique data types\nprint(unique_types)\n\n#&gt; [1] \"character\" \"numeric\"\n\n\nThere are 2 types of data types in the : character and numeric.\nThe numeric data type include both integers and decimals whereas character data types represent text or strings.\n\n\nTask 3:\n\nlm_model &lt;- lm(price ~ ., data = df_car_prices)\nsummary(lm_model)\n\n#&gt; \n#&gt; Call:\n#&gt; lm(formula = price ~ ., data = df_car_prices)\n#&gt; \n#&gt; Residuals:\n#&gt;    Min     1Q Median     3Q    Max \n#&gt;  -5662  -1120      0    798   9040 \n#&gt; \n#&gt; Coefficients:\n#&gt;                        Estimate Std. Error t value Pr(&gt;|t|)    \n#&gt; (Intercept)          -36269.965  15460.866  -2.346 0.020354 *  \n#&gt; aspirationturbo        1846.206   1041.391   1.773 0.078386 .  \n#&gt; doornumbertwo           242.523    571.929   0.424 0.672172    \n#&gt; carbodyhardtop        -3691.743   1424.825  -2.591 0.010561 *  \n#&gt; carbodyhatchback      -3344.335   1238.359  -2.701 0.007757 ** \n#&gt; carbodysedan          -2292.820   1356.014  -1.691 0.093043 .  \n#&gt; carbodywagon          -3427.921   1490.285  -2.300 0.022885 *  \n#&gt; drivewheelfwd          -504.564   1076.623  -0.469 0.640030    \n#&gt; drivewheelrwd           -15.446   1268.070  -0.012 0.990299    \n#&gt; enginelocationrear     6643.492   2572.275   2.583 0.010806 *  \n#&gt; wheelbase               -30.197     92.776  -0.325 0.745294    \n#&gt; carlength               -29.740     51.672  -0.576 0.565824    \n#&gt; carwidth                731.819    244.533   2.993 0.003258 ** \n#&gt; carheight               123.195    134.607   0.915 0.361617    \n#&gt; curbweight                2.612      1.781   1.467 0.144706    \n#&gt; enginetypedohcv       -8541.957   4749.685  -1.798 0.074219 .  \n#&gt; enginetypel             978.748   1786.384   0.548 0.584619    \n#&gt; enginetypeohc          3345.252    933.001   3.585 0.000461 ***\n#&gt; enginetypeohcf          972.919   1625.631   0.598 0.550462    \n#&gt; enginetypeohcv        -6222.322   1236.415  -5.033 1.43e-06 ***\n#&gt; cylindernumberfive   -11724.540   3019.192  -3.883 0.000157 ***\n#&gt; cylindernumberfour   -11549.326   3177.177  -3.635 0.000387 ***\n#&gt; cylindernumbersix     -7151.398   2247.230  -3.182 0.001793 ** \n#&gt; cylindernumberthree   -4318.929   4688.833  -0.921 0.358545    \n#&gt; cylindernumbertwelve -11122.209   4196.494  -2.650 0.008946 ** \n#&gt; enginesize              125.934     26.541   4.745 5.00e-06 ***\n#&gt; fuelsystem2bbl          177.136    883.615   0.200 0.841400    \n#&gt; fuelsystemmfi         -3041.018   2576.996  -1.180 0.239934    \n#&gt; fuelsystemmpfi          359.278   1001.529   0.359 0.720326    \n#&gt; fuelsystemspdi        -2543.890   1363.546  -1.866 0.064140 .  \n#&gt; fuelsystemspfi          514.766   2499.229   0.206 0.837107    \n#&gt; boreratio             -1306.740   1642.221  -0.796 0.427516    \n#&gt; stroke                -4527.137    922.732  -4.906 2.49e-06 ***\n#&gt; compressionratio       -737.901    555.960  -1.327 0.186539    \n#&gt; horsepower               10.293     22.709   0.453 0.651035    \n#&gt; peakrpm                   2.526      0.634   3.983 0.000108 ***\n#&gt; citympg                 -90.352    166.647  -0.542 0.588538    \n#&gt; highwaympg              154.858    167.148   0.926 0.355761    \n#&gt; ---\n#&gt; Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#&gt; \n#&gt; Residual standard error: 2189 on 143 degrees of freedom\n#&gt; Multiple R-squared:  0.9415, Adjusted R-squared:  0.9264 \n#&gt; F-statistic: 62.21 on 37 and 143 DF,  p-value: &lt; 2.2e-16\n\n\nThe significance of the parameters impacting the car price is denoted by the number of asterisks (*). The statistical significance for the mentioned columns is exceptionally low, indicating a high level of significance.\n\nenginetypeohc\nenginetypeohcv\ncylindernumberfive\ncylindernumberfour\nenginesize\nstroke\npeakrpm\n\n\n\nTask 4:\nChoice of the Regressor: enginesize\n\nData type: As observed in the linear regression summary, the enginesize variable is of numeric data type, accommodating both integer and decimal values. In this data set, it is notable for having integer values such as 130 152 109, etc.\nEffect on Price: The coefficient of the enginesiz is 125.934. This value indicates that for each unit increase in size, the price is expected to increase by 125.934 units, keeping other variable constants.\nStatistical Significance: The p-value for enginesize, which stands at 5 × 10^-6^, is notably small. This suggests a high level of significance, indicating a substantial effect on the Price.\n\n\n\nTask 5:\n\nlibrary(dplyr)\ndf_car_prices_upd &lt;- mutate(df_car_prices, seat_heating = TRUE)\nlm_model_sh &lt;- lm(price ~ . + seat_heating, data = df_car_prices_upd)\n\n\nSummary of the new model to see the coefficient of ‘seat_heating’\n\n\nsummary(lm_model_sh)\n\n#&gt; \n#&gt; Call:\n#&gt; lm(formula = price ~ . + seat_heating, data = df_car_prices_upd)\n#&gt; \n#&gt; Residuals:\n#&gt;    Min     1Q Median     3Q    Max \n#&gt;  -5662  -1120      0    798   9040 \n#&gt; \n#&gt; Coefficients: (1 not defined because of singularities)\n#&gt;                        Estimate Std. Error t value Pr(&gt;|t|)    \n#&gt; (Intercept)          -36269.965  15460.866  -2.346 0.020354 *  \n#&gt; aspirationturbo        1846.206   1041.391   1.773 0.078386 .  \n#&gt; doornumbertwo           242.523    571.929   0.424 0.672172    \n#&gt; carbodyhardtop        -3691.743   1424.825  -2.591 0.010561 *  \n#&gt; carbodyhatchback      -3344.335   1238.359  -2.701 0.007757 ** \n#&gt; carbodysedan          -2292.820   1356.014  -1.691 0.093043 .  \n#&gt; carbodywagon          -3427.921   1490.285  -2.300 0.022885 *  \n#&gt; drivewheelfwd          -504.564   1076.623  -0.469 0.640030    \n#&gt; drivewheelrwd           -15.446   1268.070  -0.012 0.990299    \n#&gt; enginelocationrear     6643.492   2572.275   2.583 0.010806 *  \n#&gt; wheelbase               -30.197     92.776  -0.325 0.745294    \n#&gt; carlength               -29.740     51.672  -0.576 0.565824    \n#&gt; carwidth                731.819    244.533   2.993 0.003258 ** \n#&gt; carheight               123.195    134.607   0.915 0.361617    \n#&gt; curbweight                2.612      1.781   1.467 0.144706    \n#&gt; enginetypedohcv       -8541.957   4749.685  -1.798 0.074219 .  \n#&gt; enginetypel             978.748   1786.384   0.548 0.584619    \n#&gt; enginetypeohc          3345.252    933.001   3.585 0.000461 ***\n#&gt; enginetypeohcf          972.919   1625.631   0.598 0.550462    \n#&gt; enginetypeohcv        -6222.322   1236.415  -5.033 1.43e-06 ***\n#&gt; cylindernumberfive   -11724.540   3019.192  -3.883 0.000157 ***\n#&gt; cylindernumberfour   -11549.326   3177.177  -3.635 0.000387 ***\n#&gt; cylindernumbersix     -7151.398   2247.230  -3.182 0.001793 ** \n#&gt; cylindernumberthree   -4318.929   4688.833  -0.921 0.358545    \n#&gt; cylindernumbertwelve -11122.209   4196.494  -2.650 0.008946 ** \n#&gt; enginesize              125.934     26.541   4.745 5.00e-06 ***\n#&gt; fuelsystem2bbl          177.136    883.615   0.200 0.841400    \n#&gt; fuelsystemmfi         -3041.018   2576.996  -1.180 0.239934    \n#&gt; fuelsystemmpfi          359.278   1001.529   0.359 0.720326    \n#&gt; fuelsystemspdi        -2543.890   1363.546  -1.866 0.064140 .  \n#&gt; fuelsystemspfi          514.766   2499.229   0.206 0.837107    \n#&gt; boreratio             -1306.740   1642.221  -0.796 0.427516    \n#&gt; stroke                -4527.137    922.732  -4.906 2.49e-06 ***\n#&gt; compressionratio       -737.901    555.960  -1.327 0.186539    \n#&gt; horsepower               10.293     22.709   0.453 0.651035    \n#&gt; peakrpm                   2.526      0.634   3.983 0.000108 ***\n#&gt; citympg                 -90.352    166.647  -0.542 0.588538    \n#&gt; highwaympg              154.858    167.148   0.926 0.355761    \n#&gt; seat_heatingTRUE             NA         NA      NA       NA    \n#&gt; ---\n#&gt; Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#&gt; \n#&gt; Residual standard error: 2189 on 143 degrees of freedom\n#&gt; Multiple R-squared:  0.9415, Adjusted R-squared:  0.9264 \n#&gt; F-statistic: 62.21 on 37 and 143 DF,  p-value: &lt; 2.2e-16\n\n\nFrom the table, it’s evident that the variable seat_heating exhibits no significant impact on the price. The regression model fails to establish any correlation between the price and seat_heating, resulting in a coefficient marked as NA (Not Available). This absence of correlation may be attributed to the phenomenon known as Multi-Collinearity. In this case, the seat_heating variable is consistently set to True without any variation, rendering the model incapable of estimating a coefficient for it."
  },
  {
    "objectID": "content/01_journal/10_rdd.html",
    "href": "content/01_journal/10_rdd.html",
    "title": "Regression Discontinuity",
    "section": "",
    "text": "Note\n\n\n\nYou can delete everything in here and start fresh."
  },
  {
    "objectID": "content/01_journal/01_probability.html#assignment-1",
    "href": "content/01_journal/01_probability.html#assignment-1",
    "title": "Probability Theory",
    "section": "",
    "text": "\\(P(S) = 0.3\\) and \\(P(\\overline{S}) = 0.7\\)\n\\(P(T/S) = 0.2\\) and \\(P(\\overline{T}/S) = 0.8\\)\n\\(P(T/\\overline{S}) = 0.6\\) and \\(P(\\overline{T}/\\overline{S}) = 0.4\\)\n\n\n\n\n\\(P(T\\cap S) = P(S) * P(T/S) = 0.3 * 0.2 = 0.06\\)\n\\(P(T\\cap \\overline{S}) = P(\\overline{S}) * P(T/\\overline{S}) = 0.7 * 0.6 = 0.42\\)\n\\(P(\\overline{T}\\cap S) = P(S) * P(\\overline{T}/S) = 0.3 * 0.8 = 0.24\\)\n\\(P(\\overline{T}\\cap \\overline{S}) = P(\\overline{S}) * P(\\overline{T}/\\overline{S}) = 0.7 * 0.4 = 0.28\\)\n\nSum of all four probabilities = 0.06 + 0.42 + 0.24 + 0.28 = 1"
  },
  {
    "objectID": "content/01_journal/01_probability.html#assignment-2",
    "href": "content/01_journal/01_probability.html#assignment-2",
    "title": "Probability Theory",
    "section": "# Assignment 2:",
    "text": "# Assignment 2:\n\nLet S = Smartphone, T = Tablet and C = Computer\n\n\nSolution\n\nThe percentage of customers using all three devices: \\(= P(S\\cap T\\cap C) = 0.5\\%\\)\nThe percentage of customers using at least two devices: \\(= 7.3 + 3.3 + 8.8 + 0.5 = 19.9\\%\\)\nThe percentage of customers using only one device: \\(= 42.3 + 27.8 + 10 = 80.1\\%\\)"
  },
  {
    "objectID": "content/01_journal/01_probability.html#assignment-3",
    "href": "content/01_journal/01_probability.html#assignment-3",
    "title": "Probability Theory",
    "section": "# Assignment 3:",
    "text": "# Assignment 3:\n\nGiven that,\n\\(A\\) = product is faulty vs. \\(\\overline{A}\\) = product is flawless\n\\(B\\) = alarm is triggered vs. \\(\\overline{B}\\) = no alarm\n\\(P(B|A)=0.97\\)\n\\(P(B|\\overline{A})=0.01\\)\n\\(P(A)=0.04\\)\n\n\nSolution\nBy Bayesian Theorem, \\(P(A|B) = \\frac{P(A|B)*P(A)}{P(B)} = \\frac{P(A|B)*P(A)}{P(B|A)*P(A)+P(B|\\overline{A})*P(\\overline{A})}\\)\n\n\\(P(\\overline{A}|B)=\\frac{0.01*0.96}{(0.01*0.96)+(0.97*0.04)}= 0.1983471074 =19.83\\%\\)\n\\(P(A|B)=\\frac{0.97*0.04}{(0.01*0.96)+(0.97*0.04)}= 0.8016528926 =80.17\\%\\)\n\nThese results show that in case the alarm is triggered, there is a possibility of about 19.83% that the product is flawless and a probability of 80.17% that the product is faulty."
  }
]