{
  "hash": "399e3401c08a88c2d5196ed56ec1be66",
  "result": {
    "markdown": "---\ntitle: \"Regression Discontinuity\"\n---\n\n\n# Assignment\n\n------------------------------------------------------------------------\n\n> Loading the data set coupon\n\n\n::: {.cell hash='10_rdd_cache/html/unnamed-chunk-1_a6ba708bacac351e6c7f0f8278656b23'}\n\n```{.r .cell-code}\nlibrary(dplyr)\n\ndf_coupon <- readRDS(\"../../Causal_Data_Science_Data/coupon.rds\")\n\n# Define cut-off\nc0 <- 60\n\nhead(df_coupon)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"days_since_last\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"days_since_last_centered\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"coupon\"],\"name\":[3],\"type\":[\"lgl\"],\"align\":[\"right\"]},{\"label\":[\"purchase_after\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"82.0\",\"2\":\"22.0\",\"3\":\"TRUE\",\"4\":\"22.821321\"},{\"1\":\"39.0\",\"2\":\"-21.0\",\"3\":\"FALSE\",\"4\":\"11.583787\"},{\"1\":\"7.2\",\"2\":\"-52.8\",\"3\":\"FALSE\",\"4\":\"15.982824\"},{\"1\":\"115.6\",\"2\":\"55.6\",\"3\":\"TRUE\",\"4\":\"20.458175\"},{\"1\":\"17.0\",\"2\":\"-43.0\",\"3\":\"FALSE\",\"4\":\"8.904734\"},{\"1\":\"42.8\",\"2\":\"-17.2\",\"3\":\"FALSE\",\"4\":\"6.723591\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n### Task 1:\n\n#### Sensitive change in result by running the analysis with half the bandwidth\n\n\n::: {.cell hash='10_rdd_cache/html/unnamed-chunk-2_429a651d2c431049e7db35611faaa072'}\n\n```{.r .cell-code}\n# Specify bandwidth\nbw <- (c0 + c(-2.5, 2.5))\n\n# Subsets below and above threshold in specified bandwidth\ndf_bw_below <- df_coupon %>% filter(days_since_last >= bw[1] & days_since_last < c0)\ndf_bw_above <- df_coupon %>% filter(days_since_last >= c0 & days_since_last <= bw[2])\n\ndf_bw <- bind_rows(df_bw_above, df_bw_below)\ndim(df_bw)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] 181   4\n```\n:::\n:::\n\n\n> LATE\n\n\n::: {.cell hash='10_rdd_cache/html/unnamed-chunk-3_868a5915e8e5d753c28538ca0aa252ed'}\n\n```{.r .cell-code}\nmodel_bw_below <- lm(purchase_after ~ days_since_last, df_bw_below)\nmodel_bw_above <- lm(purchase_after ~ days_since_last, df_bw_above)\n\ny0 <- predict(model_bw_below, tibble(days_since_last = c0))\ny1 <- predict(model_bw_above, tibble(days_since_last = c0))\n\nlate <- y1 - y0\nsprintf(\"LATE: %.2f\", late)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] \"LATE: 7.36\"\n```\n:::\n:::\n\n\n> Plot\n\n\n::: {.cell hash='10_rdd_cache/html/unnamed-chunk-4_e517227b901896f69253bd868791feaf'}\n\n```{.r .cell-code}\nlibrary(ggplot2)\n\n# Minimum and maximum for y-axis limits\nmin_y <- min(df_bw$purchase_after)\nmax_y <- max(df_bw$purchase_after)\n\n# Add lines for vertical distance and change limits of x-axis.\ndep_var_bw <- \n  ggplot(df_bw, aes(x = days_since_last, y = purchase_after, color = coupon)) +\n  geom_vline(xintercept = c0, linewidth = 2) +\n  geom_point(alpha = 0.4, size = 1) +\n  geom_smooth(data = df_bw_below, method = \"lm\", se = F, linewidth = 2) +\n  geom_smooth(data = df_bw_above, method = \"lm\", se = F, linewidth = 2) +\n  geom_segment(aes(x = c0, xend = bw[2], y = y0, yend = y0),\n             linetype = \"dotted\") +\n  geom_segment(aes(x = bw[1], xend = c0, y = y1, yend = y1),\n               linetype = \"dotted\") +\n  annotate(\"text\", x = c0+2, y = mean(c(y1, y0)-2),\n           label = sprintf(\"Difference: %.2f\", (y1 - y0)),\n           fontface = 2) +\n  scale_y_continuous(limits = c(min_y, max_y)) + \n  scale_color_discrete(labels = c(\"No coupon\", \"Coupon\")) +\n  xlab(\"Days since last purchase\") +\n  ylab(\"Purchase after coupon assignment\") +\n  theme(legend.title = element_blank())\ndep_var_bw\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> `geom_smooth()` using formula = 'y ~ x'\n#> `geom_smooth()` using formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](10_rdd_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n#### Sensitive change in result by running the analysis with double the bandwidth\n\n\n::: {.cell hash='10_rdd_cache/html/unnamed-chunk-5_fb1c04a386cb46e4bcb34ac81dee4ff8'}\n\n```{.r .cell-code}\n# Specify bandwidth\nbw <- (c0 + c(-10, 10))\n\n# Subsets below and above threshold in specified bandwidth\ndf_bw_below <- df_coupon %>% filter(days_since_last >= bw[1] & days_since_last < c0)\ndf_bw_above <- df_coupon %>% filter(days_since_last >= c0 & days_since_last <= bw[2])\n\ndf_bw <- bind_rows(df_bw_above, df_bw_below)\ndim(df_bw)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] 629   4\n```\n:::\n:::\n\n\n> LATE\n\n\n::: {.cell hash='10_rdd_cache/html/unnamed-chunk-6_48d24c2097d7601982ae2b5e97fc522e'}\n\n```{.r .cell-code}\nmodel_bw_below <- lm(purchase_after ~ days_since_last, df_bw_below)\nmodel_bw_above <- lm(purchase_after ~ days_since_last, df_bw_above)\n\ny0 <- predict(model_bw_below, tibble(days_since_last = c0))\ny1 <- predict(model_bw_above, tibble(days_since_last = c0))\n\nlate <- y1 - y0\nsprintf(\"LATE: %.2f\", late)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] \"LATE: 9.51\"\n```\n:::\n:::\n\n\n> Plot\n\n\n::: {.cell hash='10_rdd_cache/html/unnamed-chunk-7_3f2e7e117755a52dd9e21d6e6bbdc5f1'}\n\n```{.r .cell-code}\n# Minimum and maximum for y-axis limits\nmin_y <- min(df_bw$purchase_after)\nmax_y <- max(df_bw$purchase_after)\n\n# Add lines for vertical distance and change limits of x-axis.\ndep_var_bw <- \n  ggplot(df_bw, aes(x = days_since_last, y = purchase_after, color = coupon)) +\n  geom_vline(xintercept = c0, linewidth = 2) +\n  geom_point(alpha = 0.4, size = 1) +\n  geom_smooth(data = df_bw_below, method = \"lm\", se = F, linewidth = 2) +\n  geom_smooth(data = df_bw_above, method = \"lm\", se = F, linewidth = 2) +\n  geom_segment(aes(x = c0, xend = bw[2], y = y0, yend = y0),\n             linetype = \"dotted\") +\n  geom_segment(aes(x = bw[1], xend = c0, y = y1, yend = y1),\n               linetype = \"dotted\") +\n  annotate(\"text\", x = c0+2, y = mean(c(y1, y0)-2),\n           label = sprintf(\"Difference: %.2f\", (y1 - y0)),\n           fontface = 2) +\n  scale_y_continuous(limits = c(min_y, max_y)) + \n  scale_color_discrete(labels = c(\"No coupon\", \"Coupon\")) +\n  xlab(\"Days since last purchase\") +\n  ylab(\"Purchase after coupon assignment\") +\n  theme(legend.title = element_blank())\ndep_var_bw\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> `geom_smooth()` using formula = 'y ~ x'\n#> `geom_smooth()` using formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](10_rdd_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\nHere are the calculated Local Average Treatment Effect (LATE) values for different bandwidths:\n\nFor a bandwidth of 2.5 (half), the LATE is 7.36.\nFor a bandwidth of 5, the LATE is 7.99.\nFor a bandwidth of 10 (double), the LATE is 9.51.\n\n::: callout-note\nThis indicates LATE values are sensitive to the bandwidth chosen. The LATE is higher when the bandwidth is doubled and slightly lower when the bandwidth is halved. A larger bandwidth captures a broader range of the data, possibly introducing more variation. A smaller bandwidth might not capture enough of the treatment's effect, leading to a smaller estimate.\n\n:::\n\n### Task 2:\n\n> Loading the data set shipping\n\n\n::: {.cell hash='10_rdd_cache/html/unnamed-chunk-8_25826c898e3b55f4ec56c141f6983324'}\n\n```{.r .cell-code}\ndf_shipping  <- readRDS(\"../../Causal_Data_Science_Data/shipping.rds\")\nhead(df_shipping)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"purchase_amount\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"13.105677\"},{\"1\":\"37.120848\"},{\"1\":\"11.258422\"},{\"1\":\"9.453785\"},{\"1\":\"53.237258\"},{\"1\":\"20.541164\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n> Plot\n\n\n::: {.cell hash='10_rdd_cache/html/unnamed-chunk-9_647458c44a125eb5caaf7d701c6e6c62'}\n\n```{.r .cell-code}\ndf_shipping <- df_shipping %>%\n  mutate(shipping_type = ifelse(purchase_amount > 30, \"Free Shipping\", \"Shipping Charges\"))\n\nggplot(df_shipping, aes(x = purchase_amount, y = shipping_type, color = shipping_type)) +\n  geom_vline(xintercept = 30, color = palette()[2], linetype = \"dashed\") +\n  geom_point(alpha = 0.2, position = position_jitter()) +\n  guides(scale = \"none\") +\n  scale_y_discrete(labels = c(\"Free Shipping\", \"Shipping Charges\"))+\n  scale_color_discrete(labels = c(\"Free Shipping\", \"Shipping Charges\")) +\n  xlab(\"Purchase Amount\") +\n  ylab(\"\") +\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](10_rdd_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n> Argument\n\n* The presence of the dashed line at 30€ clearly defines a cut-off point. This aligns with the provided information about the free shipping offer for purchases with a total amount exceeding 30€.\n\n* The argument is supported by the clear visualization of the 30€ cut-off and the distribution of purchases on either side. The plot effectively illustrates how purchase_amount can serve as a running variable to distinguish between purchases eligible for free shipping and those incurring shipping charges.",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}